name: Prepare deployment to Google App Engine

on:
  pull_request:
    branches: [release]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so this job can access it
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.3

#       - name: Set Poetry config
#         run: |
#           poetry config virtualenvs.in-project true
#           poetry config virtualenvs.path ~/.venv

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.create true
          poetry config cache-dir
          
      - name: Cache Poetry venv
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: venv-${{ hashFiles('**/poetry.lock') }}
#           restore-keys: |
#             venv-${{ hashFiles('**/poetry.lock') }}

      - name: Do we have a cache-hit for all dependencies?
        run: echo "Hell yeah!  They won't be installed again."
        if: steps.cache.outputs.cache-hit == 'true'

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install -v --no-interaction --no-ansi

      - name: Code Quality
        run: poetry run black . --check

      - name: Test with pytest
        run: poetry run pytest --cov . -n 2

      - name: Create requirements.txt (cuz that's what GAE relies on)
        run: poetry export --without-hashes -f requirements.txt > requirements.txt

      - name: Push to built branch
        uses: Automattic/action-commit-to-branch@master
        with:
          branch: "develop"
          commit_message: "generate requirements.txt"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
